/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sn.ugb.ipsl.gui_gestion_etudiant;

import com.mysql.cj.xdevapi.Table;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mohamed
 */
public class AjouterEtudiant extends javax.swing.JPanel {

    Connecter conn = new Connecter();
    Statement stm, stm1, stm2;
    ResultSet Rs, Rs1, Rs2;
    DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form AjouterEtudiant
     *
     * @throws java.sql.SQLException
     */
    public AjouterEtudiant() throws SQLException {
        initComponents();
        model.addColumn("Id");
        model.addColumn("Prenom");
        model.addColumn("Nom");
        model.addColumn("Date Naissance");
        model.addColumn("IdFiliere");
        model.addColumn("Niveau");
        try {
            stm = conn.obtenirconnexion().createStatement();
            Rs = stm.executeQuery("Select * from etudiant");
            while (Rs.next()) {
                model.addRow(new Object[]{Rs.getString("Id"), Rs.getString("Prenom"), Rs.getString("Nom"),
                    Rs.getString("Date_naissance"), Rs.getString("IdFiliere"), Rs.getString("Niveau")});

            }
        } catch (SQLException e) {
            System.err.println(e);
        }

        stm1 = conn.obtenirconnexion().createStatement();
        Rs1 = stm1.executeQuery("Select * from filiere");

        String data[] = new String[10];
        data[0] = "Filiere";
        int i = 1;
        while (Rs1.next()) {
            String nom = Rs1.getString("nom");
            data[i] = nom;
            i++;
        }
        FiliereCombo.setModel(new javax.swing.DefaultComboBoxModel<>(data));
        Table.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        IdText = new javax.swing.JTextField();
        PrText = new javax.swing.JTextField();
        NomText = new javax.swing.JTextField();
        NaissText = new javax.swing.JTextField();
        NiveauCombo = new javax.swing.JComboBox<>();
        FiliereCombo = new javax.swing.JComboBox<>();
        LabelError = new javax.swing.JLabel();
        AnnulerButton = new javax.swing.JButton();
        AjouterButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        ModifierButton = new javax.swing.JButton();
        SupprimerEtudiantButton = new javax.swing.JButton();
        ActualiserButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1100, 700));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Information de l'etudiant"));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Id :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(50, 30, 20, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Prenom :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 80, 50, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Nom :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 130, 50, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Date de Naissance :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(0, 180, 120, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Fili√®re :");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(50, 230, 60, 20);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Niveau:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(50, 270, 50, 20);
        jPanel1.add(IdText);
        IdText.setBounds(110, 30, 150, 30);
        jPanel1.add(PrText);
        PrText.setBounds(110, 80, 150, 30);

        NomText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomTextActionPerformed(evt);
            }
        });
        jPanel1.add(NomText);
        NomText.setBounds(110, 130, 160, 30);
        jPanel1.add(NaissText);
        NaissText.setBounds(130, 180, 150, 30);

        NiveauCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MASTER 2", "MASTER 1", "LICENCE 3", "LICENCE 2", "LICENCE 1" }));
        jPanel1.add(NiveauCombo);
        NiveauCombo.setBounds(110, 270, 160, 22);
        jPanel1.add(FiliereCombo);
        FiliereCombo.setBounds(110, 230, 180, 22);
        jPanel1.add(LabelError);
        LabelError.setBounds(120, 310, 0, 0);

        AnnulerButton.setText("Annuler");
        AnnulerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnulerButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AnnulerButton);
        AnnulerButton.setBounds(150, 310, 71, 23);

        AjouterButton.setText("Ajouter");
        AjouterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AjouterButton);
        AjouterButton.setBounds(250, 310, 80, 23);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        ModifierButton.setText("Modifier");
        ModifierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierButtonActionPerformed(evt);
            }
        });

        SupprimerEtudiantButton.setText("Supprimer");
        SupprimerEtudiantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupprimerEtudiantButtonActionPerformed(evt);
            }
        });

        ActualiserButton.setText("Actualiser");
        ActualiserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualiserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 60, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(ModifierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(SupprimerEtudiantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 170, 170)
                        .addComponent(ActualiserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 147, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ModifierButton)
                            .addComponent(SupprimerEtudiantButton)
                            .addComponent(ActualiserButton))))
                .addGap(0, 203, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
private void deplace(int i) {
        try {
            IdText.setText(model.getValueAt(i, 0).toString());
            PrText.setText(model.getValueAt(i, 1).toString());
            NomText.setText(model.getValueAt(i, 2).toString());
            NaissText.setText(model.getValueAt(i, 3).toString());
            FiliereCombo.setSelectedItem(model.getValueAt(i, 4).toString());
            NiveauCombo.setSelectedItem(model.getValueAt(i, 5).toString());
        } catch (Exception e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "erreur de deplacement" + e.getLocalizedMessage());
        }
    }

    private void afficher() throws SQLException {
        model.setRowCount(0);
        stm = conn.obtenirconnexion().createStatement();
        Rs = stm.executeQuery("Select * from guiprojet.etudiant");
        while (Rs.next()) {
            model.addRow(new Object[]{Rs.getString("id"), Rs.getString("Prenom"), Rs.getString("Nom"),
                Rs.getString("Date_naissance"), Rs.getString("Filiere"), Rs.getString("Niveau")});

        }
        Table.setModel(model);
    }

    private void NomTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomTextActionPerformed

    private void AnnulerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnulerButtonActionPerformed
        IdText.setText("");
        PrText.getText();
        NomText.setText("");
        NaissText.setText("");
    }//GEN-LAST:event_AnnulerButtonActionPerformed

    private void AjouterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterButtonActionPerformed
        LabelError.setForeground(new java.awt.Color(255, 0, 0));
        String id = IdText.getText();
        String nom = NomText.getText();
        String prenom = PrText.getText();
        String Datenaiss = NaissText.getText();
        String filiere = FiliereCombo.getSelectedItem().toString();
        String niveau = NiveauCombo.getSelectedItem().toString();

        try {
            Rs2 = conn.obtenirconnexion().createStatement().executeQuery("select Id from guiprojet.filiere where Nom = '" + filiere + "'");
        } catch (SQLException ex) {
            Logger.getLogger(GestionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Rs2.next();
        } catch (SQLException ex) {
            Logger.getLogger(GestionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            conn.obtenirconnexion().createStatement().executeUpdate(
                    "insert into guiprojet.etudiant (ID,Prenom,Nom,Date_naissance,IdFiliere,Niveau) values ('" + id + "','" + prenom + "','" + nom + "','" + Datenaiss + "'," + Rs2.getInt("Id") + ",'" + niveau + "')");
        } catch (SQLException ex) {
            Logger.getLogger(GestionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "L'Etudiant a bien √©t√© ajout√©");

        try {
            afficher();
        } catch (SQLException ex) {
            Logger.getLogger(GestionEtudiant.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AjouterButtonActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        try {
            int i = Table.getSelectedRow();
            deplace(i);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "erreur de deplacement " + e.getLocalizedMessage());
        }
    }//GEN-LAST:event_TableMouseClicked

    private void ModifierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierButtonActionPerformed
        try {
            if (JOptionPane.showConfirmDialog(null, "Confirmer la modification ?", "modification",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {

                stm.executeUpdate("UPDATE etudiant SET Prenom='" + PrText.getText() + "',Nom='" + NomText.getText()
                        + "',Niveau='" + NiveauCombo.getSelectedItem().toString()
                        + "' WHERE Id= " + IdText.getText());
                afficher();

            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Erreur de modification !" + e.getMessage());
            System.err.println(e);
        }
    }//GEN-LAST:event_ModifierButtonActionPerformed

    private void ActualiserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualiserButtonActionPerformed
        try {
            model.setRowCount(0);
            stm = conn.obtenirconnexion().createStatement();
            Rs = stm.executeQuery("Select * from etudiant");
            while (Rs.next()) {
                model.addRow(new Object[]{Rs.getString("Id"), Rs.getString("Prenom"), Rs.getString("Nom"),
                    Rs.getString("Date_naissance"), Rs.getString("IdFiliere"), Rs.getString("Niveau")});

            }
        } catch (SQLException e) {
            System.err.println(e);
        }
        Table.setModel(model);
    }//GEN-LAST:event_ActualiserButtonActionPerformed

    private void SupprimerEtudiantButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupprimerEtudiantButtonActionPerformed
        try {
            if (JOptionPane.showConfirmDialog(null, "Attention vous voulez supprimer un etudient ?",
                    "supprimer etudient", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                if (IdText.getText().length() != 0) {
                    stm.executeUpdate("Delete From guiprojet.etudiant where id = " + IdText.getText());
                    afficher();
                } else {
                    JOptionPane.showMessageDialog(null, "veuillez SVP remplire le champ id !");
                }
            }

        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Erreur de suppression \n" + e.getMessage());
        }

    }//GEN-LAST:event_SupprimerEtudiantButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualiserButton;
    private javax.swing.JButton AjouterButton;
    private javax.swing.JButton AnnulerButton;
    private javax.swing.JComboBox<String> FiliereCombo;
    private javax.swing.JTextField IdText;
    private javax.swing.JLabel LabelError;
    private javax.swing.JButton ModifierButton;
    private javax.swing.JTextField NaissText;
    private javax.swing.JComboBox<String> NiveauCombo;
    private javax.swing.JTextField NomText;
    private javax.swing.JTextField PrText;
    private javax.swing.JButton SupprimerEtudiantButton;
    private javax.swing.JTable Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
